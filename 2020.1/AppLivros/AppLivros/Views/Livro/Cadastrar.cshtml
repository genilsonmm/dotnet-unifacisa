@model AppLivros.Models.Livro

@{
    ViewData["Title"] = "Cadastrar";
}

<h1>Cadastrar Livro</h1>
<hr />


@if (ViewData["exibirAlert"] != null && (bool)ViewData["exibirAlert"] == true)
{
    <div class="alert alert-success" role="alert">
        Livro cadastrado com sucesso
    </div>
}

<div class="row">
    <div class="col-md-4">
        <form asp-action="Cadastrar">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Titulo" class="control-label"></label>
                <input asp-for="Titulo" class="form-control" />
                <span asp-validation-for="Titulo" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Editora" class="control-label"></label>
                <input asp-for="Editora" class="form-control" />
                <span asp-validation-for="Editora" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Quantidade de páginas</label>
                <input asp-for="QntPaginas" class="form-control" />
                <span asp-validation-for="QntPaginas" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Cadastrar" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" asp-controller="Home">Voltar</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
